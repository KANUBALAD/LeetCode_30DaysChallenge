class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        
        if len(grid) == 0:
            return 0
        dyn_prog = [[0] * len(grid[0])] * len(grid)
        dyn_prog[0][0] = grid[0][0]
        for i in range(len(grid)):
            if i > 0:
                dyn_prog[i][0] = dyn_prog[i - 1][0] + grid[i][0]
            for j in range(1, len(grid[0])):
                if i == 0:
                    dyn_prog[i][j] = dyn_prog[i][j - 1] + grid[i][j]
                else:
                    dyn_prog[i][j] = min(dyn_prog[i][j - 1], dyn_prog[i - 1][j]) + grid[i][j]
        return dyn_prog[-1][-1]
